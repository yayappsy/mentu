<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weimhc.modules.job.dao.AccessDao">
    
	<sql id="accessColumns">
		a.id AS "id",
		a.resume_id AS "resumeId",
		a.member_id AS "memberId",
		a.access AS "access",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="accessJoins">
	</sql>
    
	<select id="get" resultType="Access">
		SELECT 
			<include refid="accessColumns"/>
		FROM access a
		<include refid="accessJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getByResumeId" parameterType="java.lang.String" resultType="Access">
		SELECT
		<include refid="accessColumns"/>
		FROM access a
		<include refid="accessJoins"/>
		WHERE a.resume_id = #{resumeId}
	</select>
	
	<select id="getEntity" resultType="Access">
		SELECT 
			<include refid="accessColumns"/>
		FROM access a
		<include refid="accessJoins"/>
        <where>
			and a.id = #{id}
		</where>		
	</select>	
	
	<select id="findList" resultType="Access">
		SELECT 
			<include refid="accessColumns"/>
		FROM access a
		<include refid="accessJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.pageable.orderBy != null and page.pageable.orderBy != ''">
				ORDER BY ${page.pageable.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Access">
		SELECT 
			<include refid="accessColumns"/>
		FROM access a
		<include refid="accessJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		ORDER BY a.update_date DESC
	</select>
	
	<select id="exists" resultType="boolean">
		SELECT 	count(a.id) 
		FROM access a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.id = #{id}
		</where>				
	</select>
	
	<select id="count" resultType="long">
		SELECT 	count(a.id) 	 
		FROM access a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.id = #{id}
		</where>				
	</select>
	
	<insert id="insert">
		INSERT INTO access(
			id,
			resume_id,
			member_id,
			access,
			create_date,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{resumeId},
			#{memberId},
			#{access},
			#{createDate},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<insert id="insertOrUpdate" >
		<!-- 查看是否存,如果存在及更新，否则插入 -->
	    <selectKey keyProperty="sqlMap.count" order="BEFORE" resultType="int">  
	        select count(id) as num from access where id = #{id}
	    </selectKey>  
	    <if test="sqlMap.count > 0">  
			UPDATE access SET 	
								resume_id = #{resumeId},
				member_id = #{memberId},
				access = #{access},
				update_date = #{updateDate},
				remarks = #{remarks}
			WHERE id = #{id}
   		 </if> 
   		 <if test="sqlMap.count == 0">  
			INSERT INTO access(
											id,
						resume_id,
						member_id,
						access,
						create_date,
						update_date,
						remarks,
						del_flag
					) VALUES (
											#{id},
						#{resumeId},
						#{memberId},
						#{access},
						#{createDate},
						#{updateDate},
						#{remarks},
						#{delFlag}
					)
		</if> 
	</insert>
	
	<update id="update">
		UPDATE access SET 	
			resume_id = #{resumeId},
			member_id = #{memberId},
			access = #{access},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">

		DELETE FROM access
	
	    WHERE id = #{id}
	</update>
	
	<update id="deleteBatch">
		DELETE FROM access
		WHERE
			id in
			<foreach collection="array" item="item" open="(" separator="," close=")">
			 #{item} 
			</foreach>
	</update>
	
	<update id="deleteEntity">
		UPDATE access SET 
			del_flag = #{DEL_FLAG_DELETE}
	    WHERE id = #{id}
	</update>
	
	<update id="deleteBatchEntity">
		UPDATE access SET 
			del_flag = '1'
		where
		    id in
			<foreach collection="array" item="item" open="(" separator="," close=")">
			 #{item} 
			</foreach>
	</update>
	
</mapper>