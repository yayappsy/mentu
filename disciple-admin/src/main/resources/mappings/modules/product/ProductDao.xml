<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weimhc.modules.product.dao.ProductDao">
    
	<sql id="productColumns">
		a.id AS "id",
		a.name AS "name",
		a.sn AS "sn",
		a.subtitle AS "subtitle",
		a.product_category_id AS "productCategory.id",
		a.product_category_name AS "productCategoryName",
		a.property_template_id AS "propertyTemplate.id",
		a.property_template_name AS "propertyTemplateName",
		a.product_brand_id AS "productBrand.id",
		a.product_brand_name AS "productBrandName",
		a.article_number AS "articleNumber",
		a.cost_price AS "costPrice",
		a.market_price AS "marketPrice",
		a.sales_price AS "salesPrice",
		a.default_image AS "defaultImage",
		a.image_more AS "imageMore",
		a.introduction AS "introduction",
		a.body AS "body",
		a.property_values AS "propertyValues",
		a.specification_properties_names AS "specificationPropertiesNames",
		a.stock AS "stock",
		a.is_gift AS "isGift",
		a.is_list AS "isList",
		a.is_marketable AS "isMarketable",
		a.is_top AS "isTop",
		a.is_recommend AS "isRecommend",
		a.is_instalment AS "isInstalment",
		a.keyword AS "keyword",
		a.product_release_status AS "productReleaseStatus",
		a.product_release_begin_date AS "productReleaseBeginDate",
		a.product_release_end_date AS "productReleaseEndDate",
		a.product_status AS "productStatus",
		a.product_status_remark AS "productStatusRemark",
		a.is_seller_bear_freight AS "isSellerBearFreight",
		a.sales AS "sales",
		a.score AS "score",
		a.total_score AS "totalScore",
		a.score_count AS "scoreCount",
		a.area_id AS "area.id",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="productJoins">
	</sql>
    
	<select id="get" resultType="Product">
		SELECT 
			<include refid="productColumns"/>
		FROM product a
		<include refid="productJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getEntity" resultType="Product">
		SELECT 
			<include refid="productColumns"/>
		FROM product a
		<include refid="productJoins"/>
        <where>
			and a.id = #{id}
		</where>		
	</select>	
	
	<select id="findList" resultType="Product">
		SELECT 
			<include refid="productColumns"/>
		FROM product a
		<include refid="productJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="isRecommend != null and isRecommend != ''">
				AND a.is_recommend = #{isRecommend}
			</if>
			
		</where>
		<choose>
			<when test="page !=null and page.pageable.orderBy != null and page.pageable.orderBy != ''">
				ORDER BY ${page.pageable.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Product">
		SELECT 
			<include refid="productColumns"/>
		FROM product a
		<include refid="productJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="isRecommend != null and isRecommend != ''">
				AND a.is_recommend = #{isRecommend}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.pageable.orderBy != null and page.pageable.orderBy != ''">
				ORDER BY ${page.pageable.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="exists" resultType="boolean">
		SELECT 	count(a.id) 
		FROM product a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.id = #{id}
		</where>				
	</select>
	
	<select id="count" resultType="long">
		SELECT count(*)		 
		FROM product a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.id = #{id}
		</where>				
	</select>
	<select id="findStatsPackage" resultType="Product">
	select a.`name` AS "name",SUM(s.amount) AS "amount",count(s.id) AS "count" from product a left join stats_finance s on s.product_id=a.id
    where a.del_flag = #{DEL_FLAG_NORMAL} AND a.product_category_id='3' 
    <if test="beginDate != null and beginDate != ''and endDate != null and endDate !=''">
				AND DATE_FORMAT(s.payment_date,'%Y-%m-%d') between DATE_FORMAT(#{beginDate},'%Y-%m-%d') and DATE_FORMAT(#{endDate},'%Y-%m-%d') 
	</if>
    
    GROUP BY a.id
	</select>
	
	<select id="findStatsLesson" resultType="Product">
	select a.`name` AS "name",SUM(s.amount) AS "amount",count(s.id) AS "count" from product a left join stats_finance s on s.product_id=a.id
    where a.del_flag = #{DEL_FLAG_NORMAL} AND a.product_category_id='1' 
    <if test="beginDate != null and beginDate != ''and endDate != null and endDate !=''">
				AND DATE_FORMAT(s.payment_date,'%Y-%m-%d') between DATE_FORMAT(#{beginDate},'%Y-%m-%d') and DATE_FORMAT(#{endDate},'%Y-%m-%d') 
	</if>
     GROUP BY a.id
	</select>
	<insert id="insert">
		INSERT INTO product(
			id,
			name,
			sn,
			subtitle,
			product_category_id,
			product_category_name,
			property_template_id,
			property_template_name,
			product_brand_id,
			product_brand_name,
			article_number,
			cost_price,
			market_price,
			sales_price,
			default_image,
			image_more,
			introduction,
			body,
			property_values,
			specification_properties_names,
			stock,
			is_gift,
			is_list,
			is_marketable,
			is_top,
			is_recommend,
			is_instalment,
			keyword,
			product_release_status,
			product_release_begin_date,
			product_release_end_date,
			product_status,
			product_status_remark,
			is_seller_bear_freight,
			sales,
			score,
			total_score,
			score_count,
			area_id,
			create_date,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{sn},
			#{subtitle},
			#{productCategory.id},
			#{productCategoryName},
			#{propertyTemplate.id},
			#{propertyTemplate.name},
			#{productBrand.id},
			#{productBrandName},
			#{articleNumber},
			#{costPrice},
			#{marketPrice},
			#{salesPrice},
			#{defaultImage},
			#{imageMore},
			#{introduction},
			#{body},
			#{propertyValues},
			#{specificationPropertiesNames},
			#{stock},
			#{isGift},
			#{isList},
			#{isMarketable},
			#{isTop},
			#{isRecommend},
			#{isInstalment},
			#{keyword},
			#{productReleaseStatus},
			#{productReleaseBeginDate},
			#{productReleaseEndDate},
			#{productStatus},
			#{productStatusRemark},
			#{isSellerBearFreight},
			#{sales},
			#{score},
			#{totalScore},
			#{scoreCount},
			#{area.id},
			#{createDate},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE product SET 	
			name = #{name},
			subtitle = #{subtitle},
			product_category_id = #{productCategory.id},
			product_category_name = #{productCategoryName},
			property_template_id = #{propertyTemplate.id},
			property_template_name = #{propertyTemplateName},
			product_brand_id = #{productBrand.id},
			product_brand_name = #{productBrandName},
			article_number = #{articleNumber},
			cost_price = #{costPrice},
			market_price = #{marketPrice},
			sales_price = #{salesPrice},
			default_image = #{defaultImage},
			image_more = #{imageMore},
			introduction = #{introduction},
			body = #{body},
			property_values = #{propertyValues},
			specification_properties_names = #{specificationPropertiesNames},
			stock = #{stock},
			is_gift = #{isGift},
			is_list = #{isList},
			is_marketable = #{isMarketable},
			is_top = #{isTop},
			is_recommend = #{isRecommend},
			is_instalment = #{isInstalment},
			keyword = #{keyword},
			product_release_status = #{productReleaseStatus},
			product_release_begin_date = #{productReleaseBeginDate},
			product_release_end_date = #{productReleaseEndDate},
			product_status = #{productStatus},
			product_status_remark = #{productStatusRemark},
			is_seller_bear_freight = #{isSellerBearFreight},
			area_id = #{area.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">

		DELETE FROM product
	
		WHERE id = #{id}
	</update>
	
	<update id="deleteEntity">
		UPDATE product SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="deleteProperties">
		delete from product_property WHERE product_id = #{id} 
	</update>
	
	<insert id="insertProperties">
		INSERT INTO product_property(product_id,property_template_id,property_id,property_name,property_value_ids,property_value_names) 
		<foreach collection="productProperties" item="productProperty" separator=" union all ">
			SELECT #{id},
			     #{productProperty.propertyTemplate.id}, 
			     #{productProperty.property.id},
			     #{productProperty.propertyName},
			     #{productProperty.propertyValueIds}, 
			     #{productProperty.propertyValueNames} 
			FROM dual
		</foreach>
	</insert>
</mapper>