<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weimhc.modules.job.dao.CourseDao">
    
	<sql id="courseColumns">
		a.id AS "id",
		a.name AS "name",
		a.size AS "size",
		a.start_date AS "startDate",
		a.end_date AS "endDate",
		a.content AS "content",
		a.learn AS "learn",
		a.industry_name AS "industryName",
		a.qr_code AS "qrCode",
		a.fit_people AS "fitPeople",
		a.intro AS "intro",
		a.teacher AS "teacher",
		a.price AS "price",
		a.email AS "email",
		a.address AS "address",
		a.is_roll AS "isRoll",
		a.back_image AS "backImage",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",

		b.name AS "courseLabel.name",
		b.id AS "courseLabel.id"
	</sql>
	
	<sql id="courseJoins">
		LEFT JOIN course_label b ON a.course_label_id = b.id
	</sql>
    
	<select id="get" resultType="Course">
		SELECT 
			<include refid="courseColumns"/>
		FROM course a
		<include refid="courseJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getEntity" resultType="Course">
		SELECT 
			<include refid="courseColumns"/>
		FROM course a
		<include refid="courseJoins"/>
        <where>
			and a.id = #{id}
		</where>		
	</select>	
	
	<select id="findList" resultType="Course">
		SELECT 
			<include refid="courseColumns"/>
		FROM course a
		<include refid="courseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="size != null and size != ''">
				AND a.size = #{size}
			</if>
			<if test="industryName != null and industryName != ''">
				AND a.industry_name = #{industryName}
			</if>
			<if test="teacher != null and teacher != ''">
				AND a.teacher = #{teacher}
			</if>
			<if test="beginPrice != null and endPrice != null and beginPrice != '' and endPrice != ''">
				AND a.price BETWEEN #{beginPrice} AND #{endPrice}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.pageable.orderBy != null and page.pageable.orderBy != ''">
				ORDER BY ${page.pageable.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Course">
		SELECT 
			<include refid="courseColumns"/>
		FROM course a
		<include refid="courseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		ORDER BY a.update_date DESC
	</select>
	
	<select id="exists" resultType="boolean">
		SELECT 	count(a.id) 
		FROM course a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.id = #{id}
		</where>				
	</select>
	
	<select id="count" resultType="long">
		SELECT 	count(a.id) 	 
		FROM course a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.id = #{id}
		</where>				
	</select>
	
	<insert id="insert">
		INSERT INTO course(
			id,
			course_label_id,
			name,
			size,
			start_date,
			end_date,
			content,
			learn,
			industry_name,
			qr_code,
			fit_people,
			intro,
			teacher,
			price,
			email,
			address,
			is_roll,
			back_image,
			create_date,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{courseLabel.id},
			#{name},
			#{size},
			#{startDate},
			#{endDate},
			#{content},
			#{learn},
			#{industryName},
			#{qrCode},
			#{fitPeople},
			#{intro},
			#{teacher},
			#{price},
			#{email},
			#{address},
			#{isRoll},
			#{backImage},
			#{createDate},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<insert id="insertOrUpdate" >
		<!-- 查看是否存,如果存在及更新，否则插入 -->
	    <selectKey keyProperty="sqlMap.count" order="BEFORE" resultType="int">  
	        select count(id) as num from course where id = #{id}
	    </selectKey>  
	    <if test="sqlMap.count > 0">  
			UPDATE course SET 	
								name = #{name},
				size = #{size},
				start_date = #{startDate},
				end_date = #{endDate},
				content = #{content},
				learn = #{learn},
				industry_name = #{industryName},
				qr_code = #{qrCode},
				fit_people = #{fitPeople},
				intro = #{intro},
				teacher = #{teacher},
				price = #{price},
				email = #{email},
				address = #{address},
				is_roll = #{isRoll},
				back_image = #{backImage},
				update_date = #{updateDate},
				remarks = #{remarks}
			WHERE id = #{id}
   		 </if> 
   		 <if test="sqlMap.count == 0">  
			INSERT INTO course(
											id,
						name,
						size,
						start_date,
						end_date,
						content,
						learn,
						industry_name,
						qr_code,
						fit_people,
						intro,
						teacher,
						price,
						email,
						address,
						is_roll,
						back_image,
						create_date,
						update_date,
						remarks,
						del_flag
					) VALUES (
											#{id},
						#{name},
						#{size},
						#{startDate},
						#{endDate},
						#{content},
						#{learn},
						#{industryName},
						#{qrCode},
						#{fitPeople},
						#{intro},
						#{teacher},
						#{price},
						#{email},
						#{address},
						#{isRoll},
						#{backImage},
						#{createDate},
						#{updateDate},
						#{remarks},
						#{delFlag}
					)
		</if> 
	</insert>
	
	<update id="update">
		UPDATE course SET 	
			name = #{name},
			course_label_id = #{courseLabel.id},
			size = #{size},
			start_date = #{startDate},
			end_date = #{endDate},
			content = #{content},
			learn = #{learn},
			industry_name = #{industryName},
			qr_code = #{qrCode},
			fit_people = #{fitPeople},
			intro = #{intro},
			teacher = #{teacher},
			price = #{price},
			email = #{email},
			address = #{address},
			is_roll = #{isRoll},
			back_image = #{backImage},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">

		DELETE FROM course
	
	    WHERE id = #{id}
	</update>
	
	<update id="deleteBatch">
		DELETE FROM course
		WHERE
			id in
			<foreach collection="array" item="item" open="(" separator="," close=")">
			 #{item} 
			</foreach>
	</update>
	
	<update id="deleteEntity">
		UPDATE course SET 
			del_flag = #{DEL_FLAG_DELETE}
	    WHERE id = #{id}
	</update>
	
	<update id="deleteBatchEntity">
		UPDATE course SET 
			del_flag = '1'
		where
		    id in
			<foreach collection="array" item="item" open="(" separator="," close=")">
			 #{item} 
			</foreach>
	</update>
	
</mapper>