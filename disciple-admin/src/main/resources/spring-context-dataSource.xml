<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd"
	default-lazy-init="true">

	<description>Spring DataSource Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath:javamg.properties" />

	<!-- 定义开发环境的beans -->


	<beans profile="development">
		<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
			<property name="driverClassName" value="${jdbc.driver}" />

			<!-- 基本属性 url、user、password -->
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${jdbc.pool.init}" />
			<property name="minIdle" value="${jdbc.pool.minIdle}" />
			<property name="maxActive" value="${jdbc.pool.maxActive}" />

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />

			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<property name="validationQuery" value="${jdbc.testSql}" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />

			<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
				value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
				value="20" /> -->

			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
		</bean>

		<!-- 定义事务 -->
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
		
		<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->
		<tx:annotation-driven transaction-manager="transactionManager"
			proxy-target-class="true" />


		<!-- 配置事务的传播特性 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="save*" propagation="REQUIRED" read-only="false"
					rollback-for="Exception" />
				<tx:method name="delete*" propagation="REQUIRED"
					read-only="false" rollback-for="Exception" />
				<tx:method name="update*" propagation="REQUIRED"
					read-only="false" rollback-for="Exception" />
				<tx:method name="count*" propagation="REQUIRED" read-only="false"
					rollback-for="Exception" />
				<tx:method name="select*" read-only="true" />
				<tx:method name="*" read-only="false" />
				<!-- <tx:method name="*" read-only="true" /> -->
			</tx:attributes>
		</tx:advice>
	</beans>

	<beans profile="production">
		<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
		<bean id="master" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
			<property name="driverClassName" value="${jdbc.driver}" />

			<!-- 基本属性 url、user、password -->
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${jdbc.pool.init}" />
			<property name="minIdle" value="${jdbc.pool.minIdle}" />
			<property name="maxActive" value="${jdbc.pool.maxActive}" />

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />

			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<property name="validationQuery" value="${jdbc.testSql}" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />

			<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
				value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
				value="20" /> -->

			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
		</bean>

		<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
		<bean id="slave1" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
			<property name="driverClassName" value="${jdbc.driver}" />

			<!-- 基本属性 url、user、password -->
			<property name="url" value="${jdbc.en.url}" />
			<property name="username" value="${jdbc.en.username}" />
			<property name="password" value="${jdbc.en.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${jdbc.pool.init}" />
			<property name="minIdle" value="${jdbc.pool.minIdle}" />
			<property name="maxActive" value="${jdbc.pool.maxActive}" />

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />

			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<property name="validationQuery" value="${jdbc.testSql}" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />

			<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
				value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
				value="20" /> -->

			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
		</bean>

		<!-- 多数据源配置 -->
		<bean id="dataSource" class="org.springmore.core.datasource.DynamicDataSource">
			<property name="master" ref="master" />
			<property name="slaves">
				<list>
					<ref bean="slave1" />
				</list>
			</property>
		</bean>

		<!-- 定义事务 -->
		<bean id="transactionManager"
			class="org.springmore.core.datasource.DynamicDataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>

		<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->
		<tx:annotation-driven transaction-manager="transactionManager"
			proxy-target-class="true" />


		<!-- 配置事务的传播特性 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="save*" propagation="REQUIRED" read-only="false"
					rollback-for="Exception" />
				<tx:method name="delete*" propagation="REQUIRED"
					read-only="false" rollback-for="Exception" />
				<tx:method name="update*" propagation="REQUIRED"
					read-only="false" rollback-for="Exception" />
				<tx:method name="count*" propagation="REQUIRED" read-only="false"
					rollback-for="Exception" />
				<tx:method name="select*" read-only="true" />
				<tx:method name="*" read-only="false" />
				<!-- <tx:method name="*" read-only="true" /> -->
			</tx:attributes>
		</tx:advice>

	</beans>




</beans>