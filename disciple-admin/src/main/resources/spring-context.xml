<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring    
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.2.xsd"
	default-lazy-init="true">

	<description>Spring Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath:javamg.properties" />

	<!-- 加载应用属性实例，可通过 @Value("#{APP_PROP['jdbc.driver']}") String jdbcDriver 
		方式引用 -->
	<util:properties id="APP_PROP" location="classpath:javamg.properties"
		local-override="true" />

	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。 -->
	<!-- base-package 如果多个，用“,”分隔 -->
	<context:component-scan base-package="com.thinkgem.javamg,com.weimhc,com.easemob">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- MyBatis begin -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.thinkgem.javamg,com.weimhc" />
		<property name="typeAliasesSuperType"
			value="com.thinkgem.javamg.common.persistence.BaseEntity" />
		<property name="mapperLocations" value="classpath:/mappings/**/*.xml" />
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	</bean>

	<!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.thinkgem.javamg,com.weimhc" />
		<property name="annotationClass"
			value="com.thinkgem.javamg.common.persistence.annotation.MyBatisDao" />
	</bean>

	<!-- MyBatis end -->

	<!-- 配置 JSR303 Bean Validator 定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
		 <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->  
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>



	<!-- 计划任务配置，用 @Service @Lazy(false)标注类，用@Scheduled(cron = "0 0 2 * * ?")标注方法 -->
	<task:executor id="executor" pool-size="10" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven scheduler="scheduler"
		executor="executor" proxy-target-class="true" />

	<!-- 定义国际化消息 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="${message.cache_seconds}" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="basenames">
			<list>
				<value>${message.common_path}</value>
				<value>${message.front_path}</value>
				<value>${message.admin_path}</value>
			</list>
		</property>
	</bean>

	<!-- 国际化消息解析器 -->

	<!-- 一直使用固定的Local, 改变Local 是不支持的 -->
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver"> 
		<property name="defaultLocale" value="${locale}" /> </bean> -->
	<!-- 按会话属性解析区域 -->
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"> 
		<property name="defaultLocale" value="${locale}" /> </bean> -->


	<!-- 按cookie属性解析区域 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">

		<property name="defaultLocale" value="${message.locale.default}" />
		<!-- 设置cookieName名称，可以根据名称通过js来修改设置 -->
		<property name="cookieName" value="${message.cookieName}" />
		<!-- 设置最大有效时间，如果是-1，则不存储，浏览器关闭后即失效，默认为Integer.MAX_INT -->
		<property name="cookieMaxAge" value="${message.cookieMaxAge}" />
		<!-- 设置cookie可见的地址，默认是“/”即对网站所有地址都是可见的，如果设为其它地址，则只有该地址或其后的地址才可见 -->
		<property name="cookiePath" value="${message.cookiePath}" />
	</bean>
	
</beans>